{"ast":null,"code":"var _jsxFileName = \"/Users/tarunpatra/Desktop/map/distance-matrix-routing-with-tom-tom-api/src/App.js\",\n  _s = $RefreshSig$();\nimport { useRef, useEffect, useState } from 'react';\nimport * as tt from '@tomtom-international/web-sdk-maps';\nimport * as ttapi from '@tomtom-international/web-sdk-services';\nimport './App.css';\nimport '@tomtom-international/web-sdk-maps/dist/maps.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const mapElement = useRef();\n  const [map, setMap] = useState({});\n  const [longitude, setLongitude] = useState(-0.112869);\n  const [latitude, setLatitude] = useState(51.504);\n  const convertToPoints = lngLat => {\n    return {\n      point: {\n        latitude: lngLat.lat,\n        longitude: lngLat.lng\n      }\n    };\n  };\n  const drawRoute = (geoJson, map) => {\n    if (map.getLayer('route')) {\n      map.removeLayer('route');\n      map.removeSource('route');\n    }\n    map.addLayer({\n      id: 'route',\n      type: 'line',\n      source: {\n        type: 'geojson',\n        data: geoJson\n      },\n      paint: {\n        'line-color': '#4a90e2',\n        'line-width': 6\n      }\n    });\n  };\n  const addDeliveryMarker = (lngLat, map) => {\n    const element = document.createElement('div');\n    element.className = 'marker-delivery';\n    new tt.Marker({\n      element: element\n    }).setLngLat(lngLat).addTo(map);\n  };\n  useEffect(() => {\n    const origin = {\n      lng: longitude,\n      lat: latitude\n    };\n    const destinations = [];\n    let map = tt.map({\n      key: process.env.REACT_APP_TOM_TOM_API_KEY,\n      container: mapElement.current,\n      stylesVisibility: {\n        trafficIncidents: true,\n        trafficFlow: true\n      },\n      center: [longitude, latitude],\n      zoom: 14\n    });\n    setMap(map);\n    const addMarker = () => {\n      const popupOffset = {\n        bottom: [0, -25]\n      };\n      const popup = new tt.Popup({\n        offset: popupOffset\n      }).setHTML('This is you!');\n      const element = document.createElement('div');\n      element.className = 'marker';\n      const marker = new tt.Marker({\n        draggable: true,\n        element: element\n      }).setLngLat([longitude, latitude]).addTo(map);\n      marker.on('dragend', () => {\n        const lngLat = marker.getLngLat();\n        setLongitude(lngLat.lng);\n        setLatitude(lngLat.lat);\n      });\n      marker.setPopup(popup).togglePopup();\n    };\n    addMarker();\n    const sortDestinations = locations => {\n      const pointsForDestinations = locations.map(destination => {\n        return convertToPoints(destination);\n      });\n      const callParameters = {\n        key: process.env.REACT_APP_TOM_TOM_API_KEY,\n        destinations: pointsForDestinations,\n        origins: [convertToPoints(origin)]\n      };\n      return new Promise((resolve, reject) => {\n        ttapi.services.matrixRouting(callParameters).then(matrixAPIResults => {\n          const results = matrixAPIResults.matrix[0];\n          const resultsArray = results.map((result, index) => {\n            return {\n              location: locations[index],\n              drivingtime: result.response.routeSummary.travelTimeInSeconds\n            };\n          });\n          resultsArray.sort((a, b) => {\n            return a.drivingtime - b.drivingtime;\n          });\n          const sortedLocations = resultsArray.map(result => {\n            return result.location;\n          });\n          resolve(sortedLocations);\n        });\n      });\n    };\n    const recalculateRoutes = () => {\n      sortDestinations(destinations).then(sorted => {\n        sorted.unshift(origin);\n        ttapi.services.calculateRoute({\n          key: process.env.REACT_APP_TOM_TOM_API_KEY,\n          locations: sorted\n        }).then(routeData => {\n          const geoJson = routeData.toGeoJson();\n          drawRoute(geoJson, map);\n        });\n      });\n    };\n    map.on('click', e => {\n      destinations.push(e.lngLat);\n      addDeliveryMarker(e.lngLat, map);\n      recalculateRoutes();\n    });\n    return () => map.remove();\n  }, [longitude, latitude]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: map && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: mapElement,\n        className: \"map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Where to?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"longitude\",\n          className: \"longitude\",\n          placeholder: \"Put in Longitude\",\n          onChange: e => {\n            setLongitude(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"latitude\",\n          className: \"latitude\",\n          placeholder: \"Put in latitude\",\n          onChange: e => {\n            setLatitude(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"xrUwu+KuQCzM+mWKGLR55/KzFHY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useRef","useEffect","useState","tt","ttapi","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mapElement","map","setMap","longitude","setLongitude","latitude","setLatitude","convertToPoints","lngLat","point","lat","lng","drawRoute","geoJson","getLayer","removeLayer","removeSource","addLayer","id","type","source","data","paint","addDeliveryMarker","element","document","createElement","className","Marker","setLngLat","addTo","origin","destinations","key","process","env","REACT_APP_TOM_TOM_API_KEY","container","current","stylesVisibility","trafficIncidents","trafficFlow","center","zoom","addMarker","popupOffset","bottom","popup","Popup","offset","setHTML","marker","draggable","on","getLngLat","setPopup","togglePopup","sortDestinations","locations","pointsForDestinations","destination","callParameters","origins","Promise","resolve","reject","services","matrixRouting","then","matrixAPIResults","results","matrix","resultsArray","result","index","location","drivingtime","response","routeSummary","travelTimeInSeconds","sort","a","b","sortedLocations","recalculateRoutes","sorted","unshift","calculateRoute","routeData","toGeoJson","e","push","remove","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","target","value","_c","$RefreshReg$"],"sources":["/Users/tarunpatra/Desktop/map/distance-matrix-routing-with-tom-tom-api/src/App.js"],"sourcesContent":["import { useRef, useEffect, useState } from 'react'\nimport * as tt from '@tomtom-international/web-sdk-maps'\nimport * as ttapi from '@tomtom-international/web-sdk-services'\nimport './App.css'\nimport '@tomtom-international/web-sdk-maps/dist/maps.css'\n\nconst App = () => {\n  const mapElement = useRef()\n  const [map, setMap] = useState({})\n  const [longitude, setLongitude] = useState(-0.112869)\n  const [latitude, setLatitude] = useState(51.504)\n\n  const convertToPoints = (lngLat) => {\n    return {\n      point: {\n        latitude: lngLat.lat,\n        longitude: lngLat.lng\n      }\n    }\n  }\n\n  const drawRoute = (geoJson, map) => {\n    if (map.getLayer('route')) {\n      map.removeLayer('route')\n      map.removeSource('route')\n    }\n    map.addLayer({\n      id: 'route',\n      type: 'line',\n      source: {\n        type: 'geojson',\n        data: geoJson\n      },\n      paint: {\n        'line-color': '#4a90e2',\n        'line-width': 6\n  \n      }\n    })\n  }\n\n  const addDeliveryMarker = (lngLat, map) => {\n    const element = document.createElement('div')\n    element.className = 'marker-delivery'\n    new tt.Marker({\n      element: element\n    })\n    .setLngLat(lngLat)\n    .addTo(map)\n  }\n\n  useEffect(() => {\n    const origin = {\n      lng: longitude,\n      lat: latitude,\n    }\n    const destinations = []\n\n    let map = tt.map({\n      key: process.env.REACT_APP_TOM_TOM_API_KEY,\n      container: mapElement.current,\n      stylesVisibility: {\n        trafficIncidents: true,\n        trafficFlow: true,\n      },\n      center: [longitude, latitude],\n      zoom: 14,\n    })\n    setMap(map)\n\n    const addMarker = () => {\n      const popupOffset = {\n        bottom: [0, -25]\n      }\n      const popup = new tt.Popup({ offset: popupOffset }).setHTML('This is you!')\n      const element = document.createElement('div')\n      element.className = 'marker'\n\n      const marker = new tt.Marker({\n        draggable: true,\n        element: element,\n      })\n        .setLngLat([longitude, latitude])\n        .addTo(map)\n      \n      marker.on('dragend', () => {\n        const lngLat = marker.getLngLat()\n        setLongitude(lngLat.lng)\n        setLatitude(lngLat.lat)\n      })\n\n      marker.setPopup(popup).togglePopup()\n      \n    }\n    addMarker()\n\n    const sortDestinations = (locations) => {\n      const pointsForDestinations = locations.map((destination) => {\n        return convertToPoints(destination)\n      })\n      const callParameters = {\n        key: process.env.REACT_APP_TOM_TOM_API_KEY,\n        destinations: pointsForDestinations,\n        origins: [convertToPoints(origin)],\n      }\n\n    return new Promise((resolve, reject) => {\n      ttapi.services\n        .matrixRouting(callParameters)\n        .then((matrixAPIResults) => {\n          const results = matrixAPIResults.matrix[0]\n          const resultsArray = results.map((result, index) => {\n            return {\n              location: locations[index],\n              drivingtime: result.response.routeSummary.travelTimeInSeconds,\n            }\n          })\n          resultsArray.sort((a, b) => {\n            return a.drivingtime - b.drivingtime\n          })\n          const sortedLocations = resultsArray.map((result) => {\n            return result.location\n          })\n          resolve(sortedLocations)\n        })\n      })\n    }\n\n    const recalculateRoutes = () => {\n      sortDestinations(destinations).then((sorted) => {\n        sorted.unshift(origin)\n\n        ttapi.services\n          .calculateRoute({\n            key: process.env.REACT_APP_TOM_TOM_API_KEY,\n            locations: sorted,\n          })\n          .then((routeData) => {\n            const geoJson = routeData.toGeoJson()\n            drawRoute(geoJson, map)\n        })\n      })\n    }\n\n\n    map.on('click', (e) => {\n      destinations.push(e.lngLat)\n      addDeliveryMarker(e.lngLat, map)\n      recalculateRoutes()\n    })\n\n    return () => map.remove()\n  }, [longitude, latitude])\n\n  return (\n    <>\n      {map && (\n        <div className=\"app\">\n          <div ref={mapElement} className=\"map\" />\n          <div className=\"search-bar\">\n            <h1>Where to?</h1>\n            <input\n              type=\"text\"\n              id=\"longitude\"\n              className=\"longitude\"\n              placeholder=\"Put in Longitude\"\n              onChange={(e) => {\n                setLongitude(e.target.value)\n              }}\n            />\n            <input\n              type=\"text\"\n              id=\"latitude\"\n              className=\"latitude\"\n              placeholder=\"Put in latitude\"\n              onChange={(e) => {\n                setLatitude(e.target.value)\n              }}\n            />\n          </div>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}